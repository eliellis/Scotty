function parse(range, length){
   return range.split(/=/).pop().split(/,/).map(function(rager){
        return rager.split(/-/).map(function(num){
            return parseInt(num, 10);
        }).reduce(function(prev, next){
            if (isNaN(prev)){
                prev = length - next;
                next = length - 1;
            }
            if (isNaN(next)){
                next = length - 1;
            }
            if (isNaN(prev) && isNaN(next)){
                prev = 0, next = length - 1;
            }
            // lax ternary processors
            prev = ((prev - 1 > length) ? length - 1 : prev) > prev - 1 ? prev : 0;
            next = (((next - 1 > length) ? length - 1 : next) > next - 1 ? next : length - 1) < prev ? length - 1 : next;
            return {begining: prev, end: next};
        });
   });
}

module.exports = exports.parse = parse;